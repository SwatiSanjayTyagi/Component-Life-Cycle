{"ast":null,"code":"var _jsxFileName = \"C:\\\\Digikull\\\\react-routing\\\\src\\\\components\\\\unMounting.js\";\nimport React, { Component } from 'react';\nimport myUnmountingData from './myUnmountingData';\n\nclass UnMounting extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      unMountingData: myUnmountingData\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }), \"The next phase in the lifecycle is when a component is removed from the DOM, or unmounting as React likes to call it. \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 72\n      }\n    }), \"React has only one built-in method that gets called when a component is unmounted: \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 100\n      }\n    }), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, this.state.unMountingData.map((item, index) => {\n      /*#__PURE__*/\n      React.createElement(\"li\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }\n      }, item.evtSubType);\n    })));\n  }\n\n}\n\nexport default UnMounting;","map":{"version":3,"sources":["C:/Digikull/react-routing/src/components/unMounting.js"],"names":["React","Component","myUnmountingData","UnMounting","constructor","props","state","unMountingData","render","map","item","index","evtSubType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAC/BG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,cAAc,EAAEL;AADT,KAAX;AAGH;;AACDM,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,yIAG2D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAH3D,sGAIuF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJvF,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKF,KAAL,CAAWC,cAAX,CAA0BE,GAA1B,CAA8B,CAACC,IAAD,EAAMC,KAAN,KAAc;AACzC;AAAA;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBD,IAAI,CAACE,UAAtB;AACH,KAFA,CADL,CALJ,CADJ;AAeH;;AAvB8B;;AAyBnC,eAAeT,UAAf","sourcesContent":["import React , {Component} from 'react'\r\nimport myUnmountingData from './myUnmountingData'\r\n\r\nclass UnMounting extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            unMountingData: myUnmountingData\r\n        }\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                <br/>\r\n                The next phase in the lifecycle is when a component is removed \r\n                from the DOM, or unmounting as React likes to call it. <br/>\r\n                React has only one built-in method that gets called when a component is unmounted: <br/>\r\n                <ol> \r\n                    {this.state.unMountingData.map((item,index)=>{\r\n                        <li key={index}>{item.evtSubType}</li>\r\n                    })}\r\n                    \r\n                </ol>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default UnMounting"]},"metadata":{},"sourceType":"module"}