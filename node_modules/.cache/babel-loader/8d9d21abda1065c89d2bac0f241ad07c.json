{"ast":null,"code":"const myUpdatingData = [{\n  evtId: 0,\n  evtType: 'Updating',\n  evtSubType: 'getDerivedStateFromProps()',\n  evtDesc: 'Also at updates the getDerivedStateFromProps method is called. This is the first method that is called when a component gets updated. This is still the natural place to set the state object based on the initial props.'\n}, {\n  evtId: 1,\n  evtType: 'Updating',\n  evtSubType: 'shouldComponentUpdate()',\n  evtDesc: 'In the shouldComponentUpdate() method you can return a Boolean value that specifies whether React should continue with the rendering or not. The default value is true.'\n}, {\n  evtId: 2,\n  evtType: 'Updating',\n  evtSubType: 'render()',\n  evtDesc: 'The render() method is required, and is the method that actually outputs the HTML to the DOM.'\n}, {\n  evtId: 3,\n  evtType: 'Updating',\n  evtSubType: 'getSnapshotBeforeUpdate()',\n  evtDesc: 'In the getSnapshotBeforeUpdate() method you have access to the props and state before the update, meaning that even after the update, you can check what the values were before the update.'\n}, {\n  evtId: 4,\n  evtType: 'Updating',\n  evtSubType: 'componentDidUpdate()',\n  evtDesc: 'The componentDidUpdate method is called after the component is updated in the DOM.'\n}];\nexport default myUpdatingData;","map":{"version":3,"sources":["C:/Digikull/react-routing/src/components/myUpdatingData.js"],"names":["myUpdatingData","evtId","evtType","evtSubType","evtDesc"],"mappings":"AAAA,MAAMA,cAAc,GAAG,CACnB;AAAEC,EAAAA,KAAK,EAAE,CAAT;AAAYC,EAAAA,OAAO,EAAE,UAArB;AAAkCC,EAAAA,UAAU,EAAE,4BAA9C;AAA8EC,EAAAA,OAAO,EAAE;AAAvF,CADmB,EAEnB;AAAEH,EAAAA,KAAK,EAAE,CAAT;AAAYC,EAAAA,OAAO,EAAE,UAArB;AAAkCC,EAAAA,UAAU,EAAE,yBAA9C;AAA2EC,EAAAA,OAAO,EAAE;AAApF,CAFmB,EAGnB;AAAEH,EAAAA,KAAK,EAAE,CAAT;AAAYC,EAAAA,OAAO,EAAE,UAArB;AAAkCC,EAAAA,UAAU,EAAE,UAA9C;AAA4DC,EAAAA,OAAO,EAAE;AAArE,CAHmB,EAInB;AAAEH,EAAAA,KAAK,EAAE,CAAT;AAAYC,EAAAA,OAAO,EAAE,UAArB;AAAkCC,EAAAA,UAAU,EAAE,2BAA9C;AAA6EC,EAAAA,OAAO,EAAE;AAAtF,CAJmB,EAKnB;AAAEH,EAAAA,KAAK,EAAE,CAAT;AAAYC,EAAAA,OAAO,EAAE,UAArB;AAAkCC,EAAAA,UAAU,EAAE,sBAA9C;AAAwEC,EAAAA,OAAO,EAAE;AAAjF,CALmB,CAAvB;AAQA,eAAeJ,cAAf","sourcesContent":["const myUpdatingData = [\r\n    { evtId: 0, evtType: 'Updating' , evtSubType: 'getDerivedStateFromProps()'  , evtDesc: 'Also at updates the getDerivedStateFromProps method is called. This is the first method that is called when a component gets updated. This is still the natural place to set the state object based on the initial props.'},\r\n    { evtId: 1, evtType: 'Updating' , evtSubType: 'shouldComponentUpdate()'  , evtDesc: 'In the shouldComponentUpdate() method you can return a Boolean value that specifies whether React should continue with the rendering or not. The default value is true.'},\r\n    { evtId: 2, evtType: 'Updating' , evtSubType: 'render()'  , evtDesc: 'The render() method is required, and is the method that actually outputs the HTML to the DOM.'},\r\n    { evtId: 3, evtType: 'Updating' , evtSubType: 'getSnapshotBeforeUpdate()'  , evtDesc: 'In the getSnapshotBeforeUpdate() method you have access to the props and state before the update, meaning that even after the update, you can check what the values were before the update.'},\r\n    { evtId: 4, evtType: 'Updating' , evtSubType: 'componentDidUpdate()'  , evtDesc: 'The componentDidUpdate method is called after the component is updated in the DOM.'}\r\n]\r\n\r\nexport default myUpdatingData"]},"metadata":{},"sourceType":"module"}